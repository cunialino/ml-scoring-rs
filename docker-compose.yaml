services:
  feature_server:
    build:
      dockerfile: ./dockerfiles/Dockerfile
      args:
        APP_NAME: feature_server

    volumes:
      - ./requests/:/usr/src/app/requests/
      - ./assets/:/usr/src/app/assets
    ports:
      - "8080:8080"
    environment:
      OMP_NUM_THREADS: 1
      RUST_LOG: info
      FEATURES_HOST: 0.0.0.0
      FEATURES_PORT: 8080
      FEATURES_WORKERS: 1
    networks:
      - ml-network

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - scoring_server
    volumes:
      - ./prometheus/prom.yaml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - ml-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true        # Enable anonymous access
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer     # Set the role for anonymous users (e.g., Viewer or Admin)
      - GF_SECURITY_ADMIN_USER=admin          # Set a default admin username if needed
      - GF_SECURITY_ADMIN_PASSWORD=admin      # Set a default admin password if needed
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
    networks:
      - ml-network

networks:
  ml-network:
    driver: bridge
